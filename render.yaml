services:
  # Backend API Service
  - type: web
    name: atis-backend
    runtime: node
    buildCommand: npm install && npm run build
    startCommand: node server.js
    env: node
    region: ohio
    healthCheckPath: /health
    envVars:
      - fromGroup: atis-secrets
    plan: standard
    autoDeploy: true
    disk:
      name: data
      mountPath: /data
      sizeGB: 10

  # Web Dashboard (Frontend)
  - type: web
    name: atis-dashboard
    runtime: node
    buildCommand: npm install && npm run build
    startCommand: npm start
    env: node
    region: ohio
    healthCheckPath: /health
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://atis-backend.onrender.com
      - key: NEXT_PUBLIC_WS_URL
        value: wss://atis-backend.onrender.com
      - fromGroup: atis-secrets
    plan: standard
    autoDeploy: true

  # Redis Cache
  - type: redis
    name: atis-redis
    region: ohio
    plan: standard
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []

  # Background Worker
  - type: worker
    name: atis-worker
    runtime: node
    buildCommand: npm install
    startCommand: node worker.js
    region: ohio
    env: node
    envVars:
      - fromGroup: atis-secrets
    plan: standard
    autoDeploy: true

  # Machine Learning Service (Python)
  - type: web
    name: atis-ml
    runtime: python
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn ml_api:app
    region: ohio
    envVars:
      - fromGroup: atis-secrets
      - key: MODEL_PATH
        value: /models/relapse_model.pkl
    plan: standard
    autoDeploy: true
    disk:
      name: ml-models
      mountPath: /models
      sizeGB: 5

databases:
  # PostgreSQL for structured data
  - name: atis-postgres
    region: ohio
    plan: standard
    databaseName: atis_prod
    user: atis_admin
    ipAllowList: []
    terminationProtection: true

  # MongoDB for document storage
  - name: atis-mongodb
    region: aws-us-east-1
    plan: standard
    databaseName: atis_main
    user: atis_user
    ipAllowList: []
    terminationProtection: true

envGroups:
  - name: atis-secrets
    envVars:
      - key: MONGO_ATLAS_URI
        value: mongodb+srv://${MONGO_USER}:${MONGO_PASS}@cluster.mongodb.net/atisdb?retryWrites=true&w=majority
      - key: JWT_SECRET
        generateValue: true
      - key: ENCRYPTION_SECRET
        generateValue: true
      - key: AWS_ACCESS_KEY_ID
        value: your-access-key
      - key: AWS_SECRET_ACCESS_KEY
        value: your-secret-key
      - key: REDIS_URL
        value: redis://default:@atis-redis:6379
      - key: AUTH_SECRET
        generateValue: true
      - key: ML_API_KEY
        generateValue: true
      - key: HIPAA_COMPLIANCE_MODE
        value: strict

jobs:
  # Nightly Backup Job
  - name: nightly-backup
    plan: standard
    schedule: "0 2 * * *"
    command: node scripts/backup.js
    envVars:
      - key: AWS_BUCKET
        value: atis-backups-prod
      - fromGroup: atis-secrets

  # Weekly ML Retraining
  - name: model-retraining
    plan: standard
    schedule: "0 3 * * 0"
    command: python scripts/retrain_model.py
    envVars:
      - key: TRAINING_DATA_URL
        value: s3://atis-data/training.csv
      - fromGroup: atis-secrets
